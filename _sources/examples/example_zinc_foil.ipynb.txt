{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Import necessary libraries\n",
    "from rdflib import Graph\n",
    "from ontopy import get_ontology\n",
    "import json\n",
    "\n",
    "# Load the ontology\n",
    "echo = get_ontology('https://w3id.org/emmo/domain/electrochemistry/inferred').load()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Diameter: 2 https://w3id.org/emmo#CentiMetre\n"
     ]
    }
   ],
   "source": [
    "# Create an RDF graph\n",
    "g = Graph()\n",
    "\n",
    "# Load the JSON-LD data\n",
    "json_ld_data = {\n",
    "    \"@context\": \"https://w3id.org/emmo/domain/electrochemistry/context\",\n",
    "    \"@type\": \"Electrode\",\n",
    "    \"schema:manufacturer\": {\n",
    "       \"@type\": \"schema:ResearchOrganization\",\n",
    "       \"@id\": \"https://www.wikidata.org/wiki/Q3041255\",\n",
    "       \"schema:name\": \"SINTEF\"\n",
    "    },\n",
    "    \"schema:creator\": {\n",
    "       \"@type\": \"schema:Person\",\n",
    "       \"@id\": \"https://orcid.org/0000-0002-8758-6109\",\n",
    "       \"schema:name\": \"Simon Clark\"\n",
    "    },\n",
    "    \"hasActiveMaterial\": {\n",
    "       \"@type\": [\"Zinc\", \"Foil\"]\n",
    "    },\n",
    "    \"hasProperty\": [\n",
    "       {\n",
    "             \"@type\": [\"SpecificCapacity\", \"MeasuredProperty\"],\n",
    "             \"hasNumericalPart\": {\n",
    "                \"@type\": \"Real\",\n",
    "                \"hasNumericalValue\": 800\n",
    "             },\n",
    "             \"hasMeasurementUnit\": \"emmo:MilliAmpereHourPerGram\"\n",
    "       },\n",
    "       {\n",
    "             \"@type\": [\"Thickness\", \"ConventionalProperty\"],\n",
    "             \"hasNumericalPart\": {\n",
    "                \"@type\": \"Real\",\n",
    "                \"hasNumericalValue\": 250\n",
    "             },\n",
    "             \"hasMeasurementUnit\": \"emmo:MicroMetre\"\n",
    "       },\n",
    "       {\n",
    "             \"@type\": [\"Diameter\", \"MeasuredProperty\"],\n",
    "             \"hasNumericalPart\": {\n",
    "                \"@type\": \"Real\",\n",
    "                \"hasNumericalValue\": 2\n",
    "             },\n",
    "             \"hasMeasurementUnit\": \"emmo:CentiMetre\"\n",
    "       },\n",
    "       {\n",
    "             \"@type\": [\"Mass\", \"MeasuredProperty\"],\n",
    "             \"hasNumericalPart\": {\n",
    "                \"@type\": \"Real\",\n",
    "                \"hasNumericalValue\": 2.5\n",
    "             },\n",
    "             \"hasMeasurementUnit\": \"emmo:Gram\"\n",
    "       }\n",
    "    ]\n",
    "}\n",
    "\n",
    "# Convert JSON-LD data to RDF and add to the graph\n",
    "g.parse(data=json.dumps(json_ld_data), format='json-ld')\n",
    "\n",
    "# Query the graph to get the diameter\n",
    "query = f\"\"\"\n",
    "SELECT ?diameterValue ?measurementUnit\n",
    "WHERE {{\n",
    "  ?electrode a <{echo.Electrode.iri}> ;\n",
    "             <{echo.hasProperty.iri}> ?property .\n",
    "\n",
    "  ?property a <{echo.Diameter.iri}> ;\n",
    "            <{echo.hasNumericalPart.iri}> ?numericalPart ;\n",
    "            <{echo.hasMeasurementUnit.iri}> ?measurementUnit .\n",
    "\n",
    "  ?numericalPart <{echo.hasNumericalValue.iri}> ?diameterValue .\n",
    "}}\n",
    "\"\"\"\n",
    "\n",
    "# Run the query\n",
    "results = g.query(query)\n",
    "\n",
    "# Print results\n",
    "for row in results:\n",
    "    unit = row.measurementUnit\n",
    "    print(f\"Diameter: {row.diameterValue} {row.measurementUnit}\")\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": ".venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
